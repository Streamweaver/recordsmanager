@model PagedList.IPagedList<FireRosterMVC.Models.Staff>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Staff List";
}

<div class="panel panel-default">

    <div class="panel-body col-xs-6 col-sm-4 text-left">
        <h2>Staff List</h2>
    </div>
    <div class="panel-body col-xs-10 col-sm-8 text-right">
        @using (Html.BeginForm("Index", "Staff", FormMethod.Get, new { @class = "form-inline" }))
        {
            <div class="form-group">
                @Html.Label("Filter by")
                @Html.DropDownList("StatusFilter")
                @Html.Label("Name") @Html.TextBox("SearchString")
                <button type="submit" class="btn btn-sm btn-primary">
                    <i class="glyphicon glyphicon-search"></i>
                    <span class="sr-only">Search</span>
                </button>
            </div>
        }
    </div>

    @{var dummy = Model.FirstOrDefault(); }
    <table class="table table-striped table-hover">
        <tr>
            <th>
                @Html.DisplayNameFor(model => dummy.DisplayName)
                <a href="@Url.Action("Index", "Employees", new { sortField="name" })">
                    <i class="glyphicon glyphicon-collapse-down"></i>
                    <span class="sr-only">Sort by</span>
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => dummy.CareerDevelopmentLevel)
                <a href="@Url.Action("Index", "Employees", new { sortField="cdl" })">
                    <i class="glyphicon glyphicon-collapse-down"></i>
                    <span class="sr-only">Sort by</span>
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => dummy.HenricoUserID)
                <a href="@Url.Action("Index", "Employees", new { sortField="userid" })">
                    <i class="glyphicon glyphicon-collapse-down"></i>
                    <span class="sr-only">Sort by</span>
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => dummy.CurrentAssignment)
            </th>
            <th>
                Action
            </th>
        </tr>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.ActionLink(item.DisplayName, "Details", new { id = item.ID })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CareerDevelopmentLevel)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HenricoUserID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CurrentAssignment)
                </td>
                <td>
                    <a href="@Url.Action("Edit", "Edit", new { id=item.ID })">
                        <i class="glyphicon glyphicon-edit"></i>
                        <span class="sr-only">Edit</span>
                    </a>
                    <a href="@Url.Action("Delete", "Delete", new { id=item.ID })">
                        <i class="glyphicon glyphicon-trash"></i>
                        <span class="sr-only">Delete</span>
                    </a>
                </td>
            </tr>
        }

    </table>
    <div class="panel-footer">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Index",
        new
        {
            page,
            sortOrder = ViewBag.CurrentSortOrder,
            sortField = ViewBag.CurrentSortField,
            searchString = ViewBag.CurrentFilter,
            statusFilter = ViewBag.CurrentStatusFilter
        }))
    </div>
</div>