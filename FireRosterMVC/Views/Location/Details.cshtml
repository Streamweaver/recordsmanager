@using FireRosterMVC.Enums
@model FireRosterMVC.Models.Location

@{
    ViewBag.Title = @Html.DisplayFor(model => model.Name) + " - Details";
}

<h2>Location: @Html.DisplayFor(model => model.Name)</h2>

<div>
    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Code)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Code)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.MinimumComplement)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.MinimumComplement)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Phone)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DisplayPhone)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Street1)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Street1)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Street2)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Street2)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.City)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.City)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.State)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.State)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Zip)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Zip)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Group)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Group.Label)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
    @Html.ActionLink("Back to List", "Index")
</p>
<hr />
<h2>Roster for Today (@DateTime.Now)</h2>

@{
    var shifts = Model.Positions.Where(model => model.StartDate <= DateTime.Now).Where(model => model.EndDate >= DateTime.Now || model.EndDate == null).GroupBy(model => model.Shift);
}
@foreach (var shift in shifts)
{
    <div class="col-md-4">
        <ul class="list-group">
            <li class="list-group-item"><h4 class="list-group-item-heading">Shift</h4></li>
            @foreach (var position in shift)
            {
                <li class="list-group-item">
                    @position.Rank.Code 
                    @if (position.Staff != null)
                    {
                        <a href="@Url.Action("Details", "Staff", new { id = position.Staff_ID })">@position.Staff.DisplayName</a>
                    }
                    
                </li>
            }
        </ul>
    </div>
}
<div class="clearfix"></div>